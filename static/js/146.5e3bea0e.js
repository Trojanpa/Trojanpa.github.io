"use strict";(self["webpackChunkthree_demo2"]=self["webpackChunkthree_demo2"]||[]).push([[146],{8768:function(t,e,n){n.r(e),n.d(e,{default:function(){return g}});var i=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},s=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"demo11"},[n("div",{attrs:{id:"demo11Id"}}),n("div",{attrs:{id:"stats11Id"}})])}],o=n(9365),r=n(9477),a=n(3466),l=n.n(a),c=n(4376),h=n(1217);class d extends r.Kj0{constructor(){super(d.Geometry,new r.vBJ({opacity:0,transparent:!0})),this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;const t=new r.Pa4,e=new r.Pa4,n=new r.Wzm(16,16,r.wk1),i=new r.Wzm(16,16,r.wk1),s=d.Geometry,o=new r.FIo({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:"\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}",fragmentShader:"\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );\n\n\t\t\t\t}",depthTest:!0,depthWrite:!1,transparent:!1}),a=new r.FIo({uniforms:{map:{value:n},scale:{value:null},screenPosition:{value:null}},vertexShader:"\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\t\t\t\tattribute vec2 uv;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUV = uv;\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}",fragmentShader:"\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform sampler2D map;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = texture2D( map, vUV );\n\n\t\t\t\t}",depthTest:!1,depthWrite:!1,transparent:!1}),l=new r.Kj0(s,o),c=[],h=u.Shader,p=new r.FIo({uniforms:{map:{value:null},occlusionMap:{value:i},color:{value:new r.Ilk(16777215)},scale:{value:new r.FM8},screenPosition:{value:new r.Pa4}},vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:r.WMw,transparent:!0,depthWrite:!1}),m=new r.Kj0(s,p);this.addElement=function(t){c.push(t)};const v=new r.FM8,w=new r.FM8,f=new r.TUj,g=new r.Ltg;this.onBeforeRender=function(r,h,d){r.getCurrentViewport(g);const u=g.w/g.z,y=g.z/2,x=g.w/2;let b=16/g.w;if(v.set(b*u,b),f.min.set(g.x,g.y),f.max.set(g.x+(g.z-16),g.y+(g.w-16)),e.setFromMatrixPosition(this.matrixWorld),e.applyMatrix4(d.matrixWorldInverse),!(e.z>0)&&(t.copy(e).applyMatrix4(d.projectionMatrix),w.x=g.x+t.x*y+y-8,w.y=g.y+t.y*x+x-8,f.containsPoint(w))){r.copyFramebufferToTexture(w,n);let e=o.uniforms;e["scale"].value=v,e["screenPosition"].value=t,r.renderBufferDirect(d,null,s,o,l,null),r.copyFramebufferToTexture(w,i),e=a.uniforms,e["scale"].value=v,e["screenPosition"].value=t,r.renderBufferDirect(d,null,s,a,l,null);const h=2*-t.x,u=2*-t.y;for(let n=0,i=c.length;n<i;n++){const e=c[n],i=p.uniforms;i["color"].value.copy(e.color),i["map"].value=e.texture,i["screenPosition"].value.x=t.x+h*e.distance,i["screenPosition"].value.y=t.y+u*e.distance,b=e.size/g.w;const o=g.w/g.z;i["scale"].value.set(b*o,b),p.uniformsNeedUpdate=!0,r.renderBufferDirect(d,null,s,p,m,null)}}},this.dispose=function(){o.dispose(),a.dispose(),p.dispose(),n.dispose(),i.dispose();for(let t=0,e=c.length;t<e;t++)c[t].texture.dispose()}}}d.prototype.isLensflare=!0;class u{constructor(t,e=1,n=0,i=new r.Ilk(16777215)){this.texture=t,this.size=e,this.distance=n,this.color=i}}let p;u.Shader={uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:"\n\n\t\tprecision highp float;\n\n\t\tuniform vec3 screenPosition;\n\t\tuniform vec2 scale;\n\n\t\tuniform sampler2D occlusionMap;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\n\t\tvarying vec2 vUV;\n\t\tvarying float vVisibility;\n\n\t\tvoid main() {\n\n\t\t\tvUV = uv;\n\n\t\t\tvec2 pos = position.xy;\n\n\t\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\n\t\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\n\n\t\t\tvVisibility =        visibility.r / 9.0;\n\t\t\tvVisibility *= 1.0 - visibility.g / 9.0;\n\t\t\tvVisibility *=       visibility.b / 9.0;\n\n\t\t\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D map;\n\t\tuniform vec3 color;\n\n\t\tvarying vec2 vUV;\n\t\tvarying float vVisibility;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texture = texture2D( map, vUV );\n\t\t\ttexture.a *= vVisibility;\n\t\t\tgl_FragColor = texture;\n\t\t\tgl_FragColor.rgb *= color;\n\n\t\t}"},d.Geometry=function(){const t=new r.u9r,e=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),n=new r.vpT(e,5);return t.setIndex([0,1,2,0,2,3]),t.setAttribute("position",new r.kB5(n,3,0,!1)),t.setAttribute("uv",new r.kB5(n,2,3,!1)),t}();var m={name:"Demo11",data(){return{scene:null,camera:null,renderer:null,axes:null,planeGeometry:null,planeMaterial:null,plane:null,stats:null,controls:null,directionalLight:null,hemisphereLight:null}},mounted(){p=this,this.init(),window.addEventListener("resize",this.onWindowResize.bind(this))},methods:{init(){this.scene=new r.xsS,this.camera=new r.cPb(75,window.innerWidth/window.innerHeight/2,.1,1e3),this.renderer=new r.CP7,this.renderer.setClearColor(new r.Ilk(0)),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,document.getElementById("demo11Id").appendChild(this.renderer.domElement),this.axes=new r.y8_(50),this.scene.add(this.axes),this.loadModel(),this.planeGeometry=new r._12(100,100),this.planeMaterial=new r.YBo({color:13421772}),this.plane=new r.Kj0(this.planeGeometry,this.planeMaterial),this.plane.rotation.x=-.5*Math.PI,this.plane.position.set(15,0,0),this.plane.receiveShadow=!0,this.scene.add(this.plane),this.camera.position.x=-5,this.camera.position.y=5,this.camera.position.z=5,this.camera.lookAt(this.scene.position),this.scene.add(this.camera),this.directionalLight=new r.Ox3(16777215,2),this.directionalLight.castShadow=!0,this.directionalLight.shadow.mapSize.width=2048,this.directionalLight.shadow.mapSize.height=2048,this.directionalLight.position.set(20,20,20),this.scene.add(this.directionalLight),this.addStats(),this.createControls(),this.hemisphereLight=new r.vmT(16777215,65280,1),this.hemisphereLight.position.set(100,50,100),this.scene.add(this.hemisphereLight);const t={hemisphereLightVisible:!0,skyColor:16777215,groundColor:65280,hemisphereIntensity:1,lensflareElSize:30,lensflareElDistance:.2,lensflareElColor:16777215},e=new c.ZP.GUI,n=e.addFolder("hemisphereLight");n.add(t,"hemisphereLightVisible").onChange((function(t){p.hemisphereLight.visible=t})),n.addColor(t,"skyColor").onChange((function(t){p.hemisphereLight.color=new r.Ilk(t)})),n.addColor(t,"groundColor").onChange((function(t){p.hemisphereLight.groundColor=new r.Ilk(t)})),n.add(t,"hemisphereIntensity",0,10).onChange((function(t){p.hemisphereLight.intensity=t}));const i=new r.dpR,s=i.load("/static/textures/lensflare0.png"),o=i.load("/static/textures/lensflare1.png"),a=new d;a.addElement(new u(s,500,0)),a.addElement(new u(o,60,.1));const l=new u(o,30,.2);a.addElement(l),this.hemisphereLight.add(a);const h=e.addFolder("lensflareElement");h.add(t,"lensflareElSize",0,60).onChange((function(t){l.size=t})),h.add(t,"lensflareElDistance",0,1).onChange((function(t){l.distance=t})),h.addColor(t,"lensflareElColor").onChange((function(t){l.color=new r.Ilk(t)})),this.renderScene()},renderScene(){this.stats.update(),this.controls.update(),requestAnimationFrame(this.renderScene),this.renderer.render(this.scene,this.camera)},addStats(){this.stats=new(l()),this.stats.domElement.style.position="absolute",this.stats.domElement.style.left="0px",this.stats.domElement.style.top="0px",this.stats.setMode(0),document.getElementById("stats11Id").appendChild(this.stats.domElement)},onWindowResize(t){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},createControls(){this.controls=new o.z(this.camera,this.renderer.domElement),this.controls.update()},loadModel(){const t=this;(new h.E).setPath("./static/model/").load("untitled.glb",(function(e){console.log(e),e.scene.scale.set(.01,.01,.01),e.scene.traverse((function(t){t.isMesh&&(t.castShadow=!0)})),t.scene.add(e.scene)}))}}},v=m,w=n(1001),f=(0,w.Z)(v,i,s,!1,null,"56d9b77b",null),g=f.exports}}]);